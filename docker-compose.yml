networks:
  app-tier:
    driver: bridge

services:
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - app-tier
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  notification-service:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - kafka
    networks:
      - app-tier
  user-service:
      build:
        context: ../User-service
        dockerfile: Dockerfile
      ports:
        - "8081:8080"
      environment:
        - SPRING_PROFILES_ACTIVE=dev
        - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_db
        - SPRING_DATASOURCE_USERNAME=user-db-username
        - SPRING_DATASOURCE_PASSWORD=user-db-password
        - SPRING_REDIS_HOST=redis
        - SPRING_REDIS_PORT=6379
        - DRIVER_CLASS_NAME=org.postgresql.Driver
      depends_on:
        - postgres
        - redis
      networks:
        - app-tier

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=user-db-username
      - POSTGRES_PASSWORD=user-db-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-tier  
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-tier  
volumes:
  postgres-data:
    driver: local
